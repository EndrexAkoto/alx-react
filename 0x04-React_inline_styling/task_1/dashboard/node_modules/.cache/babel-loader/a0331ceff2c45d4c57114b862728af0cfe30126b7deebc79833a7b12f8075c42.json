{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKOTO\\\\VS code local\\\\alx-react\\\\0x04-React_inline_styling\\\\task_1\\\\dashboard\\\\src\\\\CourseList\\\\CourseListRow.js\";\nimport { checkPropTypes } from 'prop-types';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseListRow = ({\n  isHeader,\n  textFirstCell,\n  textSecondCell\n}) => {\n  const rowColor = {\n    backgroundColor: isHeader ? \"#deb5b545\" : \"#f5f5f5ab\"\n  };\n  if (isHeader === true) {\n    if (textSecondCell === null || textSecondCell === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: rowColor,\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: 2,\n          children: textFirstCell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: rowColor,\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: textFirstCell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: textSecondCell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: rowColor,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n};\n_c = CourseListRow;\nCourseListRow.prototype = {\n  isHeader: checkPropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCourseListRow.defaultProps = {\n  isHeader: false,\n  textSecondCell: null\n};\nexport default CourseListRow;\nvar _c;\n$RefreshReg$(_c, \"CourseListRow\");","map":{"version":3,"names":["checkPropTypes","React","PropTypes","jsxDEV","_jsxDEV","CourseListRow","isHeader","textFirstCell","textSecondCell","rowColor","backgroundColor","undefined","style","children","colSpan","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","bool","string","isRequired","oneOfType","number","defaultProps","$RefreshReg$"],"sources":["C:/Users/AKOTO/VS code local/alx-react/0x04-React_inline_styling/task_1/dashboard/src/CourseList/CourseListRow.js"],"sourcesContent":["import { checkPropTypes } from 'prop-types'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst CourseListRow = ({isHeader, textFirstCell, textSecondCell}) => {\r\n    const rowColor = {\r\n        backgroundColor: isHeader ? \"#deb5b545\" : \"#f5f5f5ab\"\r\n    }\r\n    \r\n\r\n    if (isHeader === true) {\r\n        if (textSecondCell === null || textSecondCell === undefined) {\r\n            return (\r\n                <tr style={ rowColor }>\r\n                    <th colSpan={2}>{ textFirstCell }</th>\r\n                </tr>\r\n            )\r\n        } else {\r\n            return (\r\n                <tr style={ rowColor }>\r\n                    <th>{ textFirstCell }</th>\r\n                    <th>{ textSecondCell }</th>\r\n                </tr>\r\n            )\r\n        }\r\n    } \r\n    else {\r\n        return (\r\n        <tr style={ rowColor }>\r\n            <td>{ textFirstCell }</td>\r\n            <td>{ textSecondCell }</td>\r\n        </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nCourseListRow.prototype = {\r\n    isHeader: checkPropTypes.bool,\r\n    textFirstCell: PropTypes.string.isRequired,\r\n    textSecondCell: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n}\r\n\r\nCourseListRow.defaultProps = {\r\n    isHeader: false,\r\n    textSecondCell: null,\r\n}\r\n\r\nexport default CourseListRow"],"mappings":";AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,aAAa,GAAGA,CAAC;EAACC,QAAQ;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EACjE,MAAMC,QAAQ,GAAG;IACbC,eAAe,EAAEJ,QAAQ,GAAG,WAAW,GAAG;EAC9C,CAAC;EAGD,IAAIA,QAAQ,KAAK,IAAI,EAAE;IACnB,IAAIE,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKG,SAAS,EAAE;MACzD,oBACIP,OAAA;QAAIQ,KAAK,EAAGH,QAAU;QAAAI,QAAA,eAClBT,OAAA;UAAIU,OAAO,EAAE,CAAE;UAAAD,QAAA,EAAGN;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAEb,CAAC,MAAM;MACH,oBACId,OAAA;QAAIQ,KAAK,EAAGH,QAAU;QAAAI,QAAA,gBAClBT,OAAA;UAAAS,QAAA,EAAMN;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1Bd,OAAA;UAAAS,QAAA,EAAML;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAEb;EACJ,CAAC,MACI;IACD,oBACAd,OAAA;MAAIQ,KAAK,EAAGH,QAAU;MAAAI,QAAA,gBAClBT,OAAA;QAAAS,QAAA,EAAMN;MAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1Bd,OAAA;QAAAS,QAAA,EAAML;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAET;AACJ,CAAC;AAAAC,EAAA,GA9BKd,aAAa;AAiCnBA,aAAa,CAACe,SAAS,GAAG;EACtBd,QAAQ,EAAEN,cAAc,CAACqB,IAAI;EAC7Bd,aAAa,EAAEL,SAAS,CAACoB,MAAM,CAACC,UAAU;EAC1Cf,cAAc,EAAEN,SAAS,CAACsB,SAAS,CAAC,CAACtB,SAAS,CAACoB,MAAM,EAAEpB,SAAS,CAACuB,MAAM,CAAC;AAC5E,CAAC;AAEDpB,aAAa,CAACqB,YAAY,GAAG;EACzBpB,QAAQ,EAAE,KAAK;EACfE,cAAc,EAAE;AACpB,CAAC;AAED,eAAeH,aAAa;AAAA,IAAAc,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}