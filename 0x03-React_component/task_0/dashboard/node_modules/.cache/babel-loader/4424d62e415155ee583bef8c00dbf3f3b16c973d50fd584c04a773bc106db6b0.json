{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKOTO\\\\VS code local\\\\alx-react\\\\0x03-React_component\\\\task_0\\\\dashboard\\\\src\\\\CourseList\\\\CourseList.js\";\nimport React from \"react\";\nimport CourseListRow from \"./CourseListRow\";\nimport './CourseList.css';\nimport CourseShape from \"./CourseShape\";\nimport PropType from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = ({\n  listCourses\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"CourseList\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"Available courses\",\n        isHeader: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: \"Course name\",\n        textSecondCell: \"Credit\",\n        isHeader: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: listCourses.length > 0 ? listCourses.map(({\n        id,\n        name,\n        credit\n      }) => /*#__PURE__*/_jsxDEV(CourseListRow, {\n        textFirstCell: name,\n        textSecondCell: credit\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 53\n      }, this)) : /*#__PURE__*/_jsxDEV(CourseList, {\n        textFirstCell: \"No course available yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = CourseList;\nCourseList.prototype = {\n  listCourses: PropType.arrayOf(CourseShape)\n};\nCourseList.defaultProps = {\n  listCourses: []\n};\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","CourseListRow","CourseShape","PropType","jsxDEV","_jsxDEV","CourseList","listCourses","id","children","textFirstCell","isHeader","fileName","_jsxFileName","lineNumber","columnNumber","textSecondCell","length","map","name","credit","_c","prototype","arrayOf","defaultProps","$RefreshReg$"],"sources":["C:/Users/AKOTO/VS code local/alx-react/0x03-React_component/task_0/dashboard/src/CourseList/CourseList.js"],"sourcesContent":["import React from \"react\"\r\nimport CourseListRow from \"./CourseListRow\"\r\nimport './CourseList.css'\r\nimport  CourseShape  from \"./CourseShape\"\r\nimport PropType from 'prop-types'\r\n\r\n\r\nconst CourseList = ({listCourses}) => {\r\n  return (\r\n    <table id=\"CourseList\">\r\n      <thead>\r\n        <CourseListRow textFirstCell=\"Available courses\" isHeader={true} />\r\n        <CourseListRow\r\n          textFirstCell=\"Course name\"\r\n          textSecondCell=\"Credit\"\r\n          isHeader={true}\r\n        />\r\n      </thead>\r\n      <tbody>\r\n        {listCourses.length > 0 ? (\r\n          listCourses.map(({ id, name, credit }) => <CourseListRow key={id} textFirstCell={name} textSecondCell={credit} />)\r\n        ) : (\r\n          <CourseList textFirstCell=\"No course available yet\" />\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nCourseList.prototype = {\r\n  listCourses: PropType.arrayOf(CourseShape),\r\n}\r\n\r\nCourseList.defaultProps = {\r\n  listCourses: [],\r\n}\r\n\r\nexport default CourseList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,kBAAkB;AACzB,OAAQC,WAAW,MAAO,eAAe;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EACpC,oBACEF,OAAA;IAAOG,EAAE,EAAC,YAAY;IAAAC,QAAA,gBACpBJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA,CAACJ,aAAa;QAACS,aAAa,EAAC,mBAAmB;QAACC,QAAQ,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEV,OAAA,CAACJ,aAAa;QACZS,aAAa,EAAC,aAAa;QAC3BM,cAAc,EAAC,QAAQ;QACvBL,QAAQ,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRV,OAAA;MAAAI,QAAA,EACGF,WAAW,CAACU,MAAM,GAAG,CAAC,GACrBV,WAAW,CAACW,GAAG,CAAC,CAAC;QAAEV,EAAE;QAAEW,IAAI;QAAEC;MAAO,CAAC,kBAAKf,OAAA,CAACJ,aAAa;QAAUS,aAAa,EAAES,IAAK;QAACH,cAAc,EAAEI;MAAO,GAAhDZ,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgD,CAAC,CAAC,gBAElHV,OAAA,CAACC,UAAU;QAACI,aAAa,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAAM,EAAA,GApBKf,UAAU;AAsBhBA,UAAU,CAACgB,SAAS,GAAG;EACrBf,WAAW,EAAEJ,QAAQ,CAACoB,OAAO,CAACrB,WAAW;AAC3C,CAAC;AAEDI,UAAU,CAACkB,YAAY,GAAG;EACxBjB,WAAW,EAAE;AACf,CAAC;AAED,eAAeD,UAAU;AAAA,IAAAe,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}