{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKOTO\\\\VS code local\\\\alx-react\\\\0x03-React_component\\\\task_0\\\\dashboard\\\\src\\\\Notifications\\\\Notifications.js\";\nimport React from 'react';\nimport './Notifications.css';\nimport closeIcon from '../assets/close-icon.png';\nimport NotificationItem from './NotificationItem';\nimport PropTypes from 'prop-types';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications({\n  displayDrawer,\n  listNotifications\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"placing\",\n    children: displayDrawer ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: 20,\n          right: 15,\n          border: \"none\",\n          background: \"transparent\"\n        },\n        \"aria-label\": \"Close\",\n        onClick: () => {\n          console.log('Close button has been clicked');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"close-icon\",\n          width: \"10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here is the list of notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [listNotifications && listNotifications.length > 0 ? listNotifications.map(({\n          id,\n          type,\n          html,\n          value\n        }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n          type: type,\n          html: html,\n          value: value\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 72\n        }, this)) : /*#__PURE__*/_jsxDEV(NotificationItem, {\n          value: \"No new notification for now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItem\",\n      children: \"Your notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Notifications;\nNotifications.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\nNotifications.defaultProps = {\n  displayDrawer: false,\n  listNotifications: []\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","closeIcon","NotificationItem","PropTypes","NotificationItemShape","jsxDEV","_jsxDEV","Notifications","displayDrawer","listNotifications","className","children","style","position","top","right","border","background","onClick","console","log","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","type","html","value","_c","propTypes","bool","arrayOf","defaultProps","$RefreshReg$"],"sources":["C:/Users/AKOTO/VS code local/alx-react/0x03-React_component/task_0/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import React from 'react'\r\nimport './Notifications.css'\r\nimport closeIcon from '../assets/close-icon.png'\r\nimport NotificationItem from './NotificationItem'\r\nimport PropTypes from 'prop-types'\r\nimport NotificationItemShape from './NotificationItemShape'\r\n\r\n\r\nfunction Notifications({displayDrawer, listNotifications}) {\r\n    return (\r\n        <div className='placing'> \r\n            { displayDrawer ? (\r\n                <div className='Notifications'>\r\n                <button style={{ position: \"absolute\",\r\n                        top: 20,\r\n                        right: 15,\r\n                        border: \"none\",\r\n                        background: \"transparent\"\r\n                    }}\r\n                aria-label=\"Close\"\r\n                onClick={() => {console.log('Close button has been clicked')}}>\r\n                    <img src={closeIcon} alt='close-icon' width={\"10px\"}/>\r\n                </button>\r\n                <p>Here is the list of notifications</p>\r\n                <ul>\r\n                {listNotifications && listNotifications.length > 0 ? (\r\n                    listNotifications.map(({id, type, html, value}) => <NotificationItem key={id} type={type} html={html} value={value} />\r\n                )) : (\r\n                    <NotificationItem value=\"No new notification for now\" />\r\n                )};\r\n                </ul>\r\n            </div>\r\n            ) : (\r\n                <div className='menuItem'>\r\n                    Your notifications\r\n                </div>\r\n            ) }   \r\n        </div>\r\n    )\r\n}\r\n\r\nNotifications.propTypes = {\r\n    displayDrawer: PropTypes.bool,\r\n    listNotifications: PropTypes.arrayOf(NotificationItemShape),\r\n\r\n  }\r\n  \r\n  Notifications.defaultProps = {\r\n    displayDrawer: false,\r\n    listNotifications: [],\r\n  }\r\n\r\nexport default Notifications"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,qBAAqB,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3D,SAASC,aAAaA,CAAC;EAACC,aAAa;EAAEC;AAAiB,CAAC,EAAE;EACvD,oBACIH,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAC,QAAA,EAClBH,aAAa,gBACXF,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9BL,OAAA;QAAQM,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAC7BC,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,MAAM;UACdC,UAAU,EAAE;QAChB,CAAE;QACN,cAAW,OAAO;QAClBC,OAAO,EAAEA,CAAA,KAAM;UAACC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAAA,CAAE;QAAAT,QAAA,eAC1DL,OAAA;UAAKe,GAAG,EAAEpB,SAAU;UAACqB,GAAG,EAAC,YAAY;UAACC,KAAK,EAAE;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACTrB,OAAA;QAAAK,QAAA,EAAG;MAAiC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxCrB,OAAA;QAAAK,QAAA,GACCF,iBAAiB,IAAIA,iBAAiB,CAACmB,MAAM,GAAG,CAAC,GAC9CnB,iBAAiB,CAACoB,GAAG,CAAC,CAAC;UAACC,EAAE;UAAEC,IAAI;UAAEC,IAAI;UAAEC;QAAK,CAAC,kBAAK3B,OAAA,CAACJ,gBAAgB;UAAU6B,IAAI,EAAEA,IAAK;UAACC,IAAI,EAAEA,IAAK;UAACC,KAAK,EAAEA;QAAM,GAAzCH,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyC,CACzH,CAAC,gBACGrB,OAAA,CAACJ,gBAAgB;UAAC+B,KAAK,EAAC;QAA6B;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC1D,EAAC,GACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,gBAEFrB,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAE1B;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACO,EAAA,GA/BQ3B,aAAa;AAiCtBA,aAAa,CAAC4B,SAAS,GAAG;EACtB3B,aAAa,EAAEL,SAAS,CAACiC,IAAI;EAC7B3B,iBAAiB,EAAEN,SAAS,CAACkC,OAAO,CAACjC,qBAAqB;AAE5D,CAAC;AAEDG,aAAa,CAAC+B,YAAY,GAAG;EAC3B9B,aAAa,EAAE,KAAK;EACpBC,iBAAiB,EAAE;AACrB,CAAC;AAEH,eAAeF,aAAa;AAAA,IAAA2B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}